#!/bin/bash

MEMORY_DECLARATION_POSITION=4
memory=( # WARNING: This line's position and MEMORY_DECLARATION_POSITION must be the same
"")

COLUMNS_IN_MEMORY=3
COLUMNS_IN_DATA=3
script=$0

createMainWindow() {
    zenity --entry                      \
           --title        "URL Manager" \
           --text         ""            \
           --entry-text   "Enter Key"   \
           --cancel-label "Quit"        \
           --ok-label     "Enter"       \
           --extra-button "Edit"
}

readMemory() {
    data=()
    local pos=1
    for value in "${memory[@]}"
    do
        if [ $(($pos % $COLUMNS_IN_MEMORY)) -eq 1 ]
        then
            data+=("FALSE")
        else
            data+=("$value")
        fi
        ((pos++))
    done
}

createEditWindow() {
    readMemory
    zenity --list                        \
           --radiolist                   \
           --title        "URL Manager"  \
           --text         "List of Keys" \
           --column       ""             \
           --column       "Key"          \
           --column       "Description"  \
           "${data[@]}"                  \
           --print-column "ALL"          \
           --cancel-label "Back"         \
           --ok-label     "Remove"       \
           --extra-button "Add"
}

createAddWindow() {
    zenity --forms                   \
           --title     "URL Manager" \
	       --text      ""            \
           --separator "\" \""       \
           --add-entry "URL"         \
           --add-entry "Key"         \
           --add-entry "Description"
}

openURL() {
    local URL
    local pos=1
    for value in "${memory[@]}"
    do
        if [ $(($pos % $COLUMNS_IN_MEMORY)) -eq 1 ]
        then
            URL="$value"
        elif [ $(($pos % $COLUMNS_IN_MEMORY)) -eq 2 ]
        then
            if [ "${1^^}" = "${value^^}" ]
            then
                xdg-open "$URL"
            fi
        fi
        ((pos++))
    done
}

openMainWindow() {
    value=$( createMainWindow )
    status=$?

    if [ "$value" = "Edit" ]
    then
        openEditWindow
    elif [ $status -eq 0 ]
    then
        openURL "$value"
    fi
}

memoryPosition() {
    readMemory
    local id
    local pos=1
    for value in "${data[@]}"
    do
        if [ $(($pos % $COLUMNS_IN_DATA)) -eq 2 ]
        then
            id="$value"
        elif [ $(($pos % $COLUMNS_IN_DATA)) -eq 0 ]
        then
            id+="|$value"
            if [ "$id" = "$1" ]
            then
                zenity --info --text $( memoryPosition "$script" )
                echo $(((($pos) / $COLUMNS_IN_DATA) + $MEMORY_DECLARATION_POSITION))
            fi
        fi
        ((pos++))
    done
}

deleteFromMemory() {
    if [ $1 ]
    then
        echo "$(sed $1d $script)" > $script
    fi
}

reload() {
    sleep 0.1s
    $script "reloaded"
}

openEditWindow() {
    value=$( createEditWindow )
    status=$?

    local memPos
    if [ "$value" = "Add" ]
    then
        openAddWindow
    elif [ $status -eq 0 ]
    then
        memPos=$( memoryPosition "$value" )
        deleteFromMemory $memPos & reload
    else
        openMainWindow
    fi
}

saveToMemory() {
    local top="$(head -n +$MEMORY_DECLARATION_POSITION $script)"
    local middle="$@"
    local bottom="$(tail -n +$(($MEMORY_DECLARATION_POSITION + 1)) $script)"
    echo "$top"     > $script
    echo "$middle" >> $script
    echo "$bottom" >> $script
}

openAddWindow() {
    value=$( createAddWindow )
    status=$?

    if [ $status -eq 0 ]
    then
        saveToMemory "\"$value\" \\" & reload
    else
        openEditWindow
    fi
}

if [ "$1" = "reloaded" ]
then
    openEditWindow
else
    openMainWindow
fi